{
  "openapi": "3.0.0",
  "info": {
    "title": "Hola esta es mi API",
    "description": "Esta API esta hecha para ZTA gas\r\n",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/luxusfahrten/ZTAgas/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    }
  ],
  "paths": {
    "/api/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Select a product",
        "description": "Este metodo ayuda a ver todos los datos",
        "operationId": "get-api-products",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update a product",
        "description": "Este metodo es para actualizar los productos",
        "operationId": "put-api-products",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Tiene que agregar el id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The API for the EatBacon IOT project",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api_products_body"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "name": "stringstri",
                    "description": "stringstri",
                    "price": 0,
                    "stock": 1000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Add product",
        "description": "Este metodo se solicitan datos para guardar un nuevo producto",
        "operationId": "post-api-products",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api_products_body_1"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "name": "stringstri",
                    "description": "stringstri",
                    "price": 1000,
                    "stock": 1000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete product",
        "description": "Este metodo es para eliminar productos",
        "operationId": "delete-api-products",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/branches": {
      "get": {
        "tags": [
          "Branches"
        ],
        "summary": "Get Branches",
        "description": "Get branches",
        "operationId": "get-api-branches",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": [
          "Branches"
        ],
        "summary": "Put Branches",
        "description": "Update Branches",
        "operationId": "put-api-branches",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Necesita el Id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api_branches_body"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "name": "string",
                    "address": "string",
                    "telephone": "string",
                    "schedule": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "tags": [
          "Branches"
        ],
        "summary": "Post Branches",
        "description": "Insert branches",
        "operationId": "post-api-branches",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api_branches_body_1"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    " name": "string",
                    " address": "string",
                    "telephone": "string",
                    "schedule": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "tags": [
          "Branches"
        ],
        "summary": "Your DELETE endpoint",
        "description": "Delete Branche",
        "operationId": "delete-api-branches",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Necesita el id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "LightingSummary": {
        "type": "object",
        "properties": {
          "zones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LightingZone"
            }
          },
          "zoneStatus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LightingZoneStatus"
            }
          }
        },
        "description": "ok"
      },
      "LightingZone": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "deviceId": {
            "type": "integer",
            "format": "int32"
          },
          "deviceType": {
            "type": "string",
            "enum": [
              "dimmer",
              "switch"
            ]
          },
          "zone": {
            "type": "string"
          }
        }
      },
      "LightingZoneStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "lastUpdate": {
            "type": "string",
            "format": "date-time"
          },
          "level": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "the status of the lighting zone."
      },
      "TemperatureSummary": {
        "type": "object",
        "properties": {
          "zones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemperatureZone"
            }
          },
          "zoneStatus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemperatueZoneStatus"
            }
          }
        },
        "description": "ok"
      },
      "TemperatureZone": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "the unique identifier for the zone",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "inputPosition": {
            "type": "integer",
            "format": "int32"
          },
          "outputPosition": {
            "type": "integer",
            "format": "int32"
          },
          "zone": {
            "type": "string"
          }
        },
        "description": "a single temperature zone"
      },
      "TemperatueZoneStatus": {
        "required": [
          "id",
          "timestamp",
          "value"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "the unique identifier for the zone"
          },
          "name": {
            "type": "string",
            "description": "the name of the zone"
          },
          "value": {
            "type": "number",
            "description": "the temperature in the zone",
            "format": "double"
          },
          "units": {
            "type": "string",
            "description": "the temperature units",
            "default": "fahrenheit",
            "enum": [
              "celsius",
              "fahrenheit"
            ]
          },
          "timestamp": {
            "type": "string",
            "description": "the timestamp when the temperature was measured",
            "format": "date-time"
          }
        },
        "description": "status of a single zone"
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "example": "everything is ok"
          }
        }
      },
      "HeaterState": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "state": {
            "type": "string"
          }
        }
      },
      "DeviceState": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "lastUpdate": {
            "type": "string",
            "format": "date-time"
          },
          "level": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ForecastResponse": {
        "type": "object",
        "properties": {
          "city": {
            "$ref": "#/components/schemas/City"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Forecast"
            }
          }
        }
      },
      "Forecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "pressure": {
            "type": "number",
            "format": "double"
          },
          "humidity": {
            "type": "integer",
            "format": "int32"
          },
          "windSpeed": {
            "type": "number",
            "format": "double"
          },
          "clouds": {
            "type": "integer",
            "format": "int32"
          },
          "temperature": {
            "$ref": "#/components/schemas/ForecastTemperature"
          },
          "weather": {
            "$ref": "#/components/schemas/WeatherForecast"
          }
        }
      },
      "City": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "lat": {
            "type": "number",
            "format": "double"
          },
          "lon": {
            "type": "number",
            "format": "double"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "ForecastTemperature": {
        "type": "object",
        "properties": {
          "low": {
            "type": "number",
            "format": "double"
          },
          "high": {
            "type": "number",
            "format": "double"
          },
          "morning": {
            "type": "number",
            "format": "double"
          },
          "day": {
            "type": "number",
            "format": "double"
          },
          "evening": {
            "type": "number",
            "format": "double"
          },
          "night": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "summary": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          }
        }
      },
      "DeviceRegistrationInfo": {
        "type": "object",
        "properties": {
          "uri": {
            "type": "string",
            "format": "uri",
            "example": "http://10.0.0.220:8080"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "0729a580-2240-11e6-9eb5-0002a5d5c51b"
          }
        }
      },
      "api_products_body": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 1000,
            "minLength": 10,
            "type": "string",
            "x-stoplight": {
              "id": "6tww5xbd4h7te"
            }
          },
          "description": {
            "maxLength": 1000,
            "minLength": 10,
            "type": "string",
            "x-stoplight": {
              "id": "4xe8nljmjwkt5"
            }
          },
          "price": {
            "type": "number",
            "x-stoplight": {
              "id": "elj8oe24r6bpq"
            }
          },
          "stock": {
            "maximum": 1000,
            "type": "number",
            "x-stoplight": {
              "id": "g3lmn8arjkzil"
            }
          }
        }
      },
      "api_products_body_1": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 1000,
            "minLength": 10,
            "type": "string",
            "x-stoplight": {
              "id": "n8zh9hcod2tir"
            }
          },
          "description": {
            "maxLength": 1000,
            "minLength": 10,
            "type": "string",
            "x-stoplight": {
              "id": "uuazcybyilnwg"
            }
          },
          "price": {
            "maximum": 1000,
            "type": "number",
            "x-stoplight": {
              "id": "9q3mxlfs7ycol"
            }
          },
          "stock": {
            "maximum": 1000,
            "type": "number",
            "x-stoplight": {
              "id": "fu61ffrftowbc"
            }
          }
        }
      },
      "api_branches_body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "x-stoplight": {
              "id": "ju45f3i3ccmlo"
            }
          },
          "address": {
            "type": "string",
            "x-stoplight": {
              "id": "z4c2y55vw556g"
            }
          },
          "telephone": {
            "type": "string",
            "x-stoplight": {
              "id": "9bfzbsswkds51"
            }
          },
          "schedule": {
            "type": "string",
            "x-stoplight": {
              "id": "glfey9qjc4jb7"
            }
          }
        }
      },
      "api_branches_body_1": {
        "type": "object",
        "properties": {
          " name": {
            "type": "string",
            "x-stoplight": {
              "id": "8y1cab7bcvxkq"
            }
          },
          " address": {
            "type": "string",
            "x-stoplight": {
              "id": "glp3l270khdzf"
            }
          },
          "telephone": {
            "type": "string",
            "x-stoplight": {
              "id": "lu7z5iu26ei02"
            }
          },
          "schedule": {
            "type": "string",
            "x-stoplight": {
              "id": "51uj4z2ojphdj"
            }
          }
        }
      }
    }
  }
}